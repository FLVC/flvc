<?php

// $Id$

/**
 * @file
 * Collected FLVC hooks (maybe),  IID only now
 *
 */


function flvc_form_alter(&$form, $form_state, $form_id) {

  if ($form_id == 'islandora_ingest_form')
  {
    if ($form['form_step_id']['#value'] == 'xml_form_builder_metadata_step')
    {
      $form['#validate'][] = 'iid_validate_ingest';
    }
  }

  if ($form_id == 'xml_form_builder_edit_datastream_form')
  {
      if (!isset($form['available_forms']))
      {
          $form['#validate'][] = 'iid_validate_edit';
      }
  }
}

function iid_validate_ingest($form, &$form_state) {

  $errmsg = 'The following IID identifiers already exist: ';
  $error_IID_numbers = '';
  $identifier_count = 0;
  if (isset($form['id'])) {
      $identifier_count = count($form['id']);
  }

  $iid_count = 0;
  for ($i=0; $i<$identifier_count; $i++)
  {
    if ( (isset($form['id'][$i]['identifier']['#value']))&&(isset($form['id'][$i]['type']['#value']))&&(strcasecmp(trim($form['id'][$i]['type']['#value']), 'IID') == 0)&&(strlen(trim($form['id'][$i]['identifier']['#value'])) > 0) )
    {
      $iid_count += 1;
      $solr_url = "http://localhost:8080/solr/select/?version=2.2&start=0&rows=10&indent=on&fl=PID&wt=json&q=mods_identifier_iid_mls%3A" . urlencode(escapeSolrValue(trim($form['id'][$i]['identifier']['#value'])));

      $results = file_get_contents($solr_url);
      $solr_results = array();
      if (isset($results)) {
          $solr_results = json_decode($results, TRUE);
          $numfound = $solr_results['response']['numFound'];
          if ($numfound > 0) {
              //form_set_error('', t('The IID identifier %iidnum already exists.', array('%iidnum' => $form['id'][$i]['identifier']['#value'])));
              $error_IID_numbers = $error_IID_numbers . $form['id'][$i]['identifier']['#value'] . ' ';
          }
      }
    }
  }

  if ($iid_count == 0) {
    form_set_error('', t('You must enter an IID identifier.'));
  }

  if (strlen($error_IID_numbers) > 0) {
    form_set_error('', t('The following IID identifiers already exist: %iidnums', array('%iidnums' => $error_IID_numbers)));
  }

  // check format of purls
  $server_error_purls = '';
  $error_purls = '';

  $location_count = 0;
  if (isset($form['location'])) {
      $location_count = count($form['location']);
  }

  $purl_count = 0;
  for ($i=0; $i<$location_count; $i++)
  {
    if ( (isset($form['location'][$i]['locDispLabel']['#value']))&&(isset($form['location'][$i]['URL']['#value']))&&(strcasecmp($form['location'][$i]['locDispLabel']['#value'], 'PURL') == 0)&&(strlen(trim($form['location'][$i]['URL']['#value'])) > 0) )
    {
      $purl_count += 1;
      $url = trim($form['location'][$i]['URL']['#value']);
      if ((strpos($url,'http://purl.flvc.org') === false)&&(strpos($url,'http://purl.fcla.edu') === false)) {
          $server_error_purls = $server_error_purls . $url . ' ';
      }
      else {
          $purl_id = str_replace('http://purl.flvc.org','',str_replace('http://purl.fcla.edu','',$url));
          $hoststr = '/' . $form['extension']['flvc']['owningInst']['#value'] . '/';
          if (stripos($purl_id,$hoststr) !== 0) {
              $error_purls = $error_purls . $url . ' ';
          }
      }
    }
  }

  if (strlen($server_error_purls) > 0) {
    form_set_error('', t('The following PURLs have incorrect server names: %badpurls.  Allowable server names are http://purl.flvc.org or http://purl.fcla.edu only.', array('%badpurls' => $server_error_purls)));
  }

  if (strlen($error_purls) > 0) {
    form_set_error('', t('Allowable PURL domains are %domains.  The following PURLs have incorrect formats: %badpurls', array('%domains' => $form['extension']['flvc']['owningInst']['#value'], '%badpurls' => $error_purls)));
  }

}

function iid_validate_edit($form, &$form_state) {

  $error_IID_numbers = '';

  $identifier_count = 0;
  if (isset($form['id'])) {
      $identifier_count = count($form['id']);
  }

  $form_action = explode('/',$form['#action']);
  $edit_object_pid = urldecode($form_action[3]);

  $iid_count = 0;
  for ($i=0; $i<$identifier_count; $i++)
  {
    if ( (isset($form['id'][$i]['identifier']['#value']))&&(isset($form['id'][$i]['type']['#value']))&&(strcasecmp(trim($form['id'][$i]['type']['#value']), 'IID') == 0)&&(strlen(trim($form['id'][$i]['identifier']['#value'])) > 0) )
    {
      $iid_count += 1;
      $solr_url = "http://localhost:8080/solr/select/?version=2.2&start=0&rows=10&indent=on&fl=PID&wt=json&q=mods_identifier_iid_mls%3A" . urlencode(escapeSolrValue(trim($form['id'][$i]['identifier']['#value'])));

      $results = file_get_contents($solr_url);
      $solr_results = array();
      if (isset($results)) {
          $solr_results = json_decode($results, TRUE);
          $numfound = $solr_results['response']['numFound'];
          if ($numfound > 0) {
              $object_results = $solr_results['response']['docs'];
              foreach ($object_results as $object_index => $object_result)
              {
                  if ($edit_object_pid != $object_result['PID']) {
                      $error_IID_numbers = $error_IID_numbers . $form['id'][$i]['identifier']['#value'] . ' ';
                  }
              }
          }
      }
    }
  }

  if ($iid_count == 0) {
    form_set_error('', t('You must enter an IID identifier.'));
  }

  if (strlen($error_IID_numbers) > 0) {
    form_set_error('', t('The following IID identifiers already exist in other objects: %iidnums', array('%iidnums' => $error_IID_numbers)));
  }

  // check format of purls
  $server_error_purls = '';
  $error_purls = '';

  $location_count = 0;
  if (isset($form['location'])) {
      $location_count = count($form['location']);
  }

  $purl_count = 0;
  for ($i=0; $i<$location_count; $i++)
  {
    if ( (isset($form['location'][$i]['locDispLabel']['#value']))&&(isset($form['location'][$i]['URL']['#value']))&&(strcasecmp($form['location'][$i]['locDispLabel']['#value'], 'PURL') == 0)&&(strlen(trim($form['location'][$i]['URL']['#value'])) > 0) )
    {
      $purl_count += 1;
      $url = trim($form['location'][$i]['URL']['#value']);
      if ((strpos($url,'http://purl.flvc.org') === false)&&(strpos($url,'http://purl.fcla.edu') === false)) {
          $server_error_purls = $server_error_purls . $url . ' ';
      }
      else {
          $purl_id = str_replace('http://purl.flvc.org','',str_replace('http://purl.fcla.edu','',$url));
          $hoststr = '/' . $form['extension']['flvc']['owningInst']['#value'] . '/';
          if ((stripos($purl_id,$hoststr) !== 0)&&(stripos($purl_id,'/flvc/') !== 0)&&(stripos($purl_id,'/fcla/') !== 0)) {
              $error_purls = $error_purls . $url . ' ';
          }
      }
    }
  }

  if (strlen($server_error_purls) > 0) {
    form_set_error('', t('The following PURLs have incorrect server names: %badpurls.  Allowable server names are http://purl.flvc.org or http://purl.fcla.edu only.', array('%badpurls' => $server_error_purls)));
  }

  $domains = $form['extension']['flvc']['owningInst']['#value'];
  if (strcasecmp($domains, 'flvc') != 0) $domains = $domains . ' FLVC';
  $domains = $domains . ' FCLA';

  if (strlen($error_purls) > 0) {
    form_set_error('', t('Allowable PURL domains are %domains.  The following PURLs have incorrect formats: %badpurls', array('%domains' => $domains, '%badpurls' => $error_purls)));
  }

}

function escapeSolrValue($string)
{
    $match = array('\\', '+', '-', '&', '|', '!', '(', ')', '{', '}', '[', ']', '^', '~', '*', '?', ':', '"', ';', ' ');
    $replace = array('\\\\', '\\+', '\\-', '\\&', '\\|', '\\!', '\\(', '\\)', '\\{', '\\}', '\\[', '\\]', '\\^', '\\~', '\\*', '\\?', '\\:', '\\"', '\\;', '\\ ');
    $string = str_replace($match, $replace, $string);
     
    return $string;
}

function flvc_islandora_object_ingested(AbstractObject $object) {

    if (!isset($object['MODS']))
        return;

    $owning_institution = '';
    $purl = '';
    $purl_id = '';

    $mods_str = $object['MODS']->content;
    $mods_xml = new SimpleXMLElement($mods_str);

    // check for owning institution
    $found_owning_inst = FALSE;
    $namespaces = $mods_xml->getNameSpaces(true);
    if ((isset($mods_xml->extension))&&(isset($namespaces['flvc']))) {
        $flvc_entry = $mods_xml->extension->children($namespaces['flvc']);
        if ((count($flvc_entry) == 1)&&(isset($flvc_entry->flvc))) {
            $flvc_fields = $flvc_entry->flvc->children($namespaces['flvc']);
            if (isset($flvc_fields->owningInstitution)&&(strlen($flvc_fields->owningInstitution) > 0)) {
                $found_owning_inst = TRUE;
                $owning_institution = strtolower($flvc_fields->owningInstitution);
            }
        }
    }
    if ($found_owning_inst == FALSE)
        return;

    // check for IID identifier
    $iid_count = 0;
    $digitool_count = 0;
    if (isset($mods_xml->identifier)) {
            foreach ($mods_xml->identifier as $identifier) {
              if (isset($identifier['type'])&&(strcasecmp($identifier['type'], 'IID') == 0)&&(strlen(trim($identifier)) > 0)) {
                $iid_count += 1;
              }
              if (isset($identifier['type'])&&(strcasecmp($identifier['type'], 'digitool') == 0)&&(strlen(trim($identifier)) > 0)) {
                $digitool_count += 1;
              }
            }
    }
    if ($iid_count == 0)
        return;

    // check for PURL
    foreach ($mods_xml->location as $location) {
        $url = $location->url;
        if ((strpos($url,'http://purl.flvc.org') !== false)||(strpos($url,'http://purl.fcla.edu') !== false)) {
            $purl = str_replace('http://purl.fcla.edu','',$url);
            $purl_id = str_replace('http://purl.flvc.org','',$purl);
            // if no digitool id on ingest, go ahead and create the purl
            if ($digitool_count == 0) {
                $command = '/usr/local/islandora/flvc_purl_scripts/prospective/load-prospective --purl ' . escapeshellarg($purl_id) . ' --own ' . $owning_institution . ' --pid ' . $object->id;
                //drupal_set_message(t($command));
                $execout = array();
                exec($command, $execout);
                foreach ($execout as $msg) {
                    if (strpos($msg,'PURLERROR') !== false)
                        drupal_set_message($msg);
                }
            }
        }
    }

    unset($mods_xml);
}

function flvc_islandora_datastream_modified(AbstractObject $object, AbstractDatastream $datastream) {

    if ($datastream->id != 'MODS')
        return;

    if (!isset($object['MODS']))
        return;

    $owning_institution = '';
    $purl = '';
    $purl_id = '';

    $mods_str = $object['MODS']->content;
    $mods_xml = new SimpleXMLElement($mods_str);

    // check for owning institution
    $found_owning_inst = FALSE;
    $namespaces = $mods_xml->getNameSpaces(true);
    if ((isset($mods_xml->extension))&&(isset($namespaces['flvc']))) {
        $flvc_entry = $mods_xml->extension->children($namespaces['flvc']);
        if ((count($flvc_entry) == 1)&&(isset($flvc_entry->flvc))) {
            $flvc_fields = $flvc_entry->flvc->children($namespaces['flvc']);
            if (isset($flvc_fields->owningInstitution)&&(strlen($flvc_fields->owningInstitution) > 0)) {
                $found_owning_inst = TRUE;
                $owning_institution = strtolower($flvc_fields->owningInstitution);
            }
        }
    }
    if ($found_owning_inst == FALSE)
        return;

    // check for IID identifier
    $iid_count = 0;
    if (isset($mods_xml->identifier)) {
            foreach ($mods_xml->identifier as $identifier) {
              if (isset($identifier['type'])&&(strcasecmp($identifier['type'], 'IID') == 0)&&(strlen(trim($identifier)) > 0)) {
                $iid_count += 1;
              }
            }
    }
    if ($iid_count == 0)
        return;

    // check for PURL
    foreach ($mods_xml->location as $location) {
        $url = $location->url;
        if ((strpos($url,'http://purl.flvc.org') !== false)||(strpos($url,'http://purl.fcla.edu') !== false)) {
            $purl = str_replace('http://purl.fcla.edu','',$url);
            $purl_id = str_replace('http://purl.flvc.org','',$purl);
            if ($owning_institution == 'fsu') {
                $command = '/usr/local/islandora/flvc_purl_scripts/prospective/load-prospective --purl ' . escapeshellarg($purl_id) . ' --own ' . $owning_institution . ' --pid ' . $object->id;
                //drupal_set_message(t($command));
                $execout = array();
                exec($command, $execout);
                foreach ($execout as $msg) {
                    if (strpos($msg,'PURLERROR') !== false)
                        drupal_set_message($msg);
                }
            }
        }
    }

    unset($mods_xml);
}

function flvc_page_alter(&$page) {

  //$content_model = "islandora:collectionCModel";
  $content_model = '';
  $query_root = variable_get('islandora_repository_pid', 'islandora:root');
  $fedora_object = islandora_object_load($query_root);

  $collection_selected = isset($_GET['collection']) ? $_GET['collection'] : '';
  if (!empty($collection_selected)) {
      $query_pid = $collection_selected;
      $content_model = "islandora:collectionCModel";
  }
  else if (strpos($_SERVER['REQUEST_URI'],'islandora/object/')) {
      $endpos = strpos($_SERVER['REQUEST_URI'], '/', 18);
      if ($endpos === false) {
          $endpos = strpos($_SERVER['REQUEST_URI'], '?', 18);
      }
      if ($endpos) {
          $view_pid = urldecode(substr($_SERVER['REQUEST_URI'],18,$endpos-18));
      }
      else {
          $view_pid = urldecode(substr($_SERVER['REQUEST_URI'],18));
      }
      if ($view_pid == $query_root) {
          $query_pid = $query_root;
          $content_model = "islandora:collectionCModel";
      }
      else {
          $query_pid = $view_pid;
          // query for current object label and hasModel
          $contentquery = 'select $title $content from <#ri>
                    where <info:fedora/' . $query_pid . '> <fedora-model:label> $title
                    and <info:fedora/' . $query_pid . '> <fedora-model:hasModel> $content
                    minus $content <mulgara:is> <info:fedora/fedora-system:FedoraObject-3.0>';
          $results = $fedora_object->repository->ri->itqlQuery($contentquery, 'unlimited');
          $object_content_type = '';
          $object_title = '';
          if (count($results) > 0) {
              $object_title = $results[0]['title']['value'];
              $object_content_type = $results[0]['content']['value'];
              $content_model = $results[0]['content']['value'];
          }

          if (strpos($object_content_type, 'collectionCModel'))
          {
            $collection_selected = $query_pid;
          }
          else
          {
            // at a non-collection object

            // special processing if at a newspaper issue, newspaper page, or book page object
            if ((strpos($object_content_type, 'pageCModel'))||
                (strpos($object_content_type, 'newspaperIssueCModel'))||
                (strpos($object_content_type, 'newspaperPageCModel')))
            {
                $query_book = 'select $parentObject $collection from <#ri>
                        where (
                        $parentObject <fedora-rels-ext:isMemberOfCollection> $collection and
                        walk(<info:fedora/' . $query_pid . '> <fedora-rels-ext:isMemberOf> $parentObject and $subject <fedora-rels-ext:isMemberOf> $parentObject)
                      )';
                $results = $fedora_object->repository->ri->itqlQuery($query_book, 'unlimited');
                if (count($results) > 0) {
                    $query_pid = $results[0]['parentObject']['value'];
                }
            }

            // get the immediate parent collections
            $query_string = 'select $parentObject $title $content from <#ri>
                        where (
                        $parentObject <fedora-model:label> $title
                        and $parentObject <fedora-model:hasModel> $content
                        and (
                          <info:fedora/' . $query_pid . '> <fedora-rels-ext:isMemberOfCollection> $parentObject
                        )
                        and $parentObject <fedora-model:state> <info:fedora/fedora-system:def/model#Active>
                      )
                      minus $content <mulgara:is> <info:fedora/fedora-system:FedoraObject-3.0>
                      minus $parentObject <mulgara:is> <info:fedora/' . $query_pid . '>
                      order by $title desc';
            $results = $fedora_object->repository->ri->itqlQuery($query_string, 'unlimited');
            $query_pid = '';
            foreach ($results as $result) {
                // only add parent collection if namespace matches site root
                $root_namespace = islandora_get_namespace($query_root);
                if (($root_namespace == 'islandora')||(islandora_get_namespace($result['parentObject']['value']) == $root_namespace)) {
                    if (strlen($query_pid) > 0) $query_pid .= ';';
                    $query_pid .= $result['parentObject']['value'];
                }
            }
            //if (count($results) > 0) {
            //    $query_pid = $results[0]['parentObject']['value'];
            //}
          }
      }
  }
  else {
      $query_pid = $query_root;
  }


    $script = 'var _currentCollection = "' . $query_pid  . '";';
    if (strlen($content_model) > 0) {
        $script .= 'var _currentContentModel = "' . $content_model . '";';
    }

    $search_url = '';
    $solr_query = '*';
    if (strpos($_SERVER['REQUEST_URI'],'islandora/search/')) {
      $search_url = '/islandora/search/';
      $endpos = strpos($_SERVER['REQUEST_URI'], '?', 18);
      if ($endpos) {
          $solr_query = urldecode(substr($_SERVER['REQUEST_URI'],18,$endpos-18));
      }
      else {
          $solr_query = urldecode(substr($_SERVER['REQUEST_URI'],18));
      }

      if (trim($solr_query) == '') $solr_query = '*';

      // check for search type
      $search_type = '';
      $colonpos = strpos($solr_query, ':');
      if ($colonpos > 0) {
          $search_type = substr($solr_query,0,$colonpos);
          if (strpos($search_type,'_') > 0) {
              $solr_query = substr($solr_query,$colonpos+1);
          }
          else {
              $search_type = '';
          }
      }

      $search_url .= '?q=' . urlencode($solr_query);

      if (strlen($search_type) > 0) {
          $search_url .= '&searchtype=' . urlencode($search_type);
      }

      $params = $_GET;

      if (isset($params['f']) && is_array($params['f'])) {
          foreach ($params['f'] as $facet) {
              $search_url .= '&c=' . urlencode($facet);
          }
      }

      if (isset($params['collection'])) {
          $search_url .= '&collection=' . urlencode($params['collection']);
      }

      if (isset($params['page'])) {
          $search_url .= '&page=' . urlencode($params['page']);
      }

      $script .= 'var _trackSearch = "' . $search_url . '";';

    }

    drupal_add_js($script, array('scope' => 'header', 'type' => 'inline'));
 
}
